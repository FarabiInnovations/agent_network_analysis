#### Baseline Formulas, improve or change as needed #### 

# Non Normalized Risk Score with scaling factors: (alpha, beta, gamma, epsilon)
   R = (alpha*DegreeCentrality) + 
  (beta*BetweenessCentrality) + 
  (gamma*EigenvectorCentrality) +
  (epsilon*ClosenessCentrality)

# Normalized Risk Score with scaling factors: (alpha, beta, gamma, epsilon)
   R_norm = (alpha * norm(DegreeCentrality)) + 
  (beta * norm(BetweenessCentrality)) + 
  (gamma * norm(EigenvectorCentrality)) +
  (epsilon * norm(ClosenessCentrality))  

# Sigmoid transformation 
  Sigmoid(R^*)

# Final Risk (p is the priority weight of the error type, which in this example
# will be either type-1 or type-2)
  FR = R * (p * PriorityError + (1-p) * NonPriorityError)

# Cost Impact (cost.csv) where success = 1 (i.e. produces one unit of value),
#  and an error is a negative value, (e.g. -3 would mean an error 
#  negates 3 successful units of value).   
   C = R * ErrorCost + (1−R) * SuccessValue 

# Total Success Revenue. Revenue unit is whatever dollar value 
# assigned to a successful output. This could be assigned any desired value unit (time saved, opportunity cost etc.).
  Total Success Revenue (TS) = Final Success Rate * Success Value * Revenue Unit 
# Total Error Loss = 
  Final Risk * Error Cost * Revenue Unit
# Net Revenue Impact = 
  Total Success Revenue + Total Error Loss

# Error Policy

# Cost

# Design Threats

Initial baseline based on Ken Haung's analysis, toy example threats were all just to set 0.5. 
More threat types can be added and threat levels adjusted based on best approximation of reality. 

# Resource Threats
These are turnover and resource availability risk additions. This adds the potential personel risk,
i.e. if a few engineers are responsible for large critical networks, and they are unhappy or
looking for other opportunities, or the company is restructuring, this can help reflect this
non-mechanistic risk.

Base calculation: 1 - (churn_rate^resources_availabile)

Two approaches:

Multiplicative: approach when interested in showing that increasing 
resources dampen the overall risk relative to the baseline vulnerabilities.

Additive: In this case if the analysis requires capturing two distinct sources of risk. 
One inherent to the node (baseline) along with another coming from insufficient maintenance (churn).

# SLA Policy

SLA uptime with actual uptime
uptime_risk = (sla_uptime - actual_uptime) / sla_uptime
              uptime_multiplier = 1 + (uptime_risk)
